clearvars
hold off

%% Profile 1 - High Level
Profile_1 = {...
    struct('seg', 'STARTUP', ...
        'mff', 0.990), ...
    struct('seg', 'TAXI', ...
        'mff', 0.9925), ...
    struct('seg', 'TAKEOFF', ...
        'mff', 0.995, ...
        'speed', 200, ...
        'alt', 0), ...
    struct('seg', 'CLIMB', ...
        'RoC', 500, ...
        'LD', 8, ...
        'C', 1), ...
    struct('seg', 'CRUISE', ...
        'range', 9849600, ...
        'alt', 45000, ...
        'mach', 1.2, ...
        'LD', 8, ...
        'C', 1), ...
    struct('seg', 'RELEASE', ...
        'dropped_weight', 10000), ...
    struct('seg', 'CLIMB', ...
        'RoC', 700, ...
        'LD', 6, ...
        'C', 0.8), ...
    struct('seg', 'CRUISE', ...
        'range', 9849600, ...
        'alt', 50000, ...
        'mach', 1.2, ...
        'LD', 6, ...
        'C', 0.8), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'RESERVES', ...
        'duration', 30, ...
        'LD', 6, ...
        'C', 0.8), ...
    struct('seg', 'LANDING', ...
        'mff', 0.995), ...
};
Weights_1 = struct('payload', 0, 'crew', 100);
[Profile_1, Weights_1] = CalculateMission( Profile_1, Weights_1 );

%% Profile 2 - Medium Level Penetration
Profile_2 = {...
    struct('seg', 'STARTUP', ...
        'mff', 0.990), ...
    struct('seg', 'TAXI', ...
        'mff', 0.9925), ...
    struct('seg', 'TAKEOFF', ...
        'mff', 0.995, ...
        'speed', 200, ...
        'alt', 0), ...
    struct('seg', 'CLIMB', ...
        'RoC', 500, ...
        'LD', 9, ...
        'C', 1), ...
    struct('seg', 'CRUISE', ...
        'range', 9059200, ...
        'alt', 45000, ...
        'mach', 1.2, ...
        'LD', 9, ...
        'C', 1), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'CRUISE', ...
        'range', 790400, ...
        'alt', 20000, ...
        'mach', 0.85, ...
        'LD', 8, ...
        'C', 0.6), ...
    struct('seg', 'RELEASE', ...
        'dropped_weight', 10000), ...
    struct('seg', 'CRUISE', ...
        'range', 790400, ...
        'alt', 20000, ...
        'mach', 0.85, ...
        'LD', 7, ...
        'C', 0.6), ...
    struct('seg', 'CLIMB', ...
        'RoC', 500, ...
        'LD', 7, ...
        'C', 0.6), ...
    struct('seg', 'CRUISE', ...
        'range', 9059200, ...
        'alt', 50000, ...
        'mach', 1.2, ...
        'LD', 6, ...
        'C', 0.8), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'RESERVES', ...
        'duration', 30, ...
        'LD', 6, ...
        'C', 0.8), ...
    struct('seg', 'LANDING', ...
        'mff', 0.995), ...
};
Weights_2 = struct('payload', 0, 'crew', 100);
[Profile_2, Weights_2] = CalculateMission( Profile_2, Weights_2 );

%% Profile 3 - Low Level Penetration
Profile_3 = {...
    struct('seg', 'STARTUP', ...
        'mff', 0.990), ...
    struct('seg', 'TAXI', ...
        'mff', 0.9925), ...
    struct('seg', 'TAKEOFF', ...
        'mff', 0.995, ...
        'speed', 200, ...
        'alt', 0), ...
    struct('seg', 'CLIMB', ...
        'RoC', 500, ...
        'LD', 9, ...
        'C', 1), ...
    struct('seg', 'CRUISE', ...
        'range', 6809600, ...
        'alt', 45000, ...
        'mach', 1.2, ...
        'LD', 9, ...
        'C', 1), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'CRUISE', ...
        'range', 3040000, ...
        'alt', 2000, ...
        'mach', 0.85, ...
        'LD', 8, ...
        'C', 0.6), ...
    struct('seg', 'RELEASE', ...
        'dropped_weight', 10000), ...
    struct('seg', 'CRUISE', ...
        'range', 3040000, ...
        'alt', 2000, ...
        'mach', 0.85, ...
        'LD', 7, ...
        'C', 0.6), ...
    struct('seg', 'CLIMB', ...
        'RoC', 500, ...
        'LD', 7, ...
        'C', 0.6), ...
    struct('seg', 'CRUISE', ...
        'range', 6809600, ...
        'alt', 45000, ...
        'mach', 1.2, ...
        'LD', 6, ...
        'C', 0.8), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'RESERVES', ...
        'duration', 30, ...
        'LD', 6, ...
        'C', 0.8), ...
    struct('seg', 'LANDING', ...
        'mff', 0.995), ...
};
Weights_3 = struct('payload', 0, 'crew', 100);
[Profile_3, Weights_3] = CalculateMission( Profile_3, Weights_3 );

%{
%% Profile 4 - High Level Penetration
Profile_4 = {...
    struct('seg', 'STARTUP', ...
        'mff', 0.990), ...
    struct('seg', 'TAXI', ...
        'mff', 0.9925), ...
    struct('seg', 'TAKEOFF', ...
        'mff', 0.995, ...
        'speed', 200, ...
        'alt', 0), ...
    struct('seg', 'CLIMB', ...
        'RoC', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', 45000, ...
        'mach', 1.2, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'CLIMB', ...
        'RoC', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', 60000, ...
        'mach', 1.8, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'RELEASE', ...
        'dropped_weight', 10000), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', 60000, ...
        'mach', 1.8, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', 50000, ...
        'mach', 1.2, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'RESERVES', ...
        'duration', 30, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'LANDING', ...
        'mff', 0.995), ...
};
Weights_4 = struct('payload', 0, 'crew', 100);
[Profile_4, Weights_4] = CalculateMission( Profile_4, Weights_4 );

%% Profile 5 - Single Integrated Operational Plan
Profile_5 = {...
    struct('seg', 'STARTUP', ...
        'mff', 0.990), ...
    struct('seg', 'TAXI', ...
        'mff', 0.9925), ...
    struct('seg', 'TAKEOFF', ...
        'mff', 0.995, ...
        'speed', 200, ...
        'alt', 0), ...
    struct('seg', 'CLIMB', ...
        'RoC', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', xxx, ...
        'mach', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'REFUEL'), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', xxx, ...
        'mach', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', xxx, ...
        'mach', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'RELEASE', ...
        'dropped_weight', 10000), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', xxx, ...
        'mach', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'CLIMB', ...
        'RoC', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'CRUISE', ...
        'range', xxx, ...
        'alt', xxx, ...
        'mach', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'RESERVES', ...
        'duration', 30, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'LANDING', ...
        'mff', 0.995), ...
};
Weights_5 = struct('payload', 0, 'crew', 100);
[Profile_5, Weights_5] = CalculateMission( Profile_5, Weights_5 );

%% Profile 6 - Ferry
Profile_6 = {...
    struct('seg', 'STARTUP', ...
        'mff', 0.990), ...
    struct('seg', 'TAXI', ...
        'mff', 0.9925), ...
    struct('seg', 'TAKEOFF', ...
        'mff', 0.995, ...
        'speed', 200, ...
        'alt', 0), ...
    struct('seg', 'CLIMB', ...
        'RoC', xxx, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'CRUISE', ...
        'range', 3040000, ...
        'alt', 45000, ...
        'mach', 0.8, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'DESCENT', ...
        'mff', 0.9875), ...
    struct('seg', 'RESERVES', ...
        'duration', 30, ...
        'LD', xxx, ...
        'C', xxx), ...
    struct('seg', 'LANDING', ...
        'mff', 0.995), ...
};
Weights_6 = struct('payload', 0, 'crew', 100);
[Profile_6, Weights_6] = CalculateMission( Profile_6, Weights_6 );
%}

%% Plot technology line
B = 1.0495;
A = 0.1111;
yline = [8e3 2e5];
xline = 10.^(A+B.*log10(yline));
loglog(xline, yline);

%% Format plot
title('Technology diagram','interpreter','latex');
xlabel('Gross take-off weight $W_{TO}$, kg','interpreter','latex');
ylabel('Empty weight $W_{E}$, kg','interpreter','latex');
xlim([1e4 4e5]);
ylim([8e3 2e5]);

%% Plot profile lines
hold on
fplot(Weights_1.empty, xlim);
fplot(Weights_2.empty, xlim);
fplot(Weights_3.empty, xlim);
%{
fplot(Weights_4.empty, xlim);
fplot(Weights_5.empty, xlim);
fplot(Weights_6.empty, xlim);
%}

legend({'Technology Line', ...
    'High Level', ...
    'Medium Level Penetration', ...
    'Low Level Penetration', ...
    'High Level Penetration', ...
    'Single Integrated Operational Plan', ...
    'Ferry', ...
    }, ...
    'Location', 'NorthWest');









